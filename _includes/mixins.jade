//- - function memoize = function(){
//-     var self = this, cache = {};
//-     return function( arg ){
//-       if(arg in cache) {
//-         console.log('Cache hit for '+arg);
//-         return cache[arg];
//-       } else {
//-         console.log('Cache miss for '+arg);
//-         return cache[arg] = self( arg );
//-       }
//-     }
//-   }

- function allPosts(path, section){
  - var r=childrenOf(path, section);
  - for(var key in section){
    - if (key !== '_data' && key !== '_contents') {
      - r=r.concat(allPosts(path.concat(key), section[key])) }}
  - return r }

- function href(path){
  - return '/' + path.join('/') }

- function subtree(path) {
  - var section = public;
  - for (var i = 0; i < path.length; i++) {
    - section = section[path[i]]
    - if (!section) return false }
  - return section }

- function childrenOf(path, section){
  - section = section || subtree(path)
  - var children = []
  - if (section) {
    - var allChildren = section['_data']
    - for (var slug in allChildren) {
      - if (allChildren[slug].index !== false) {
        - allChildren[slug].path = path.concat(slug)
        - children.push(allChildren[slug]) }}}
  - return children }

- function getPost(path){
  - var section = subtree(path.slice(0,-1))
  - var post = section && section._data && section._data[slug(path)] || {}
  - post.path = path
  - if (path.length === 1 && path[0] === 'index' ) post.path = []
  - return post }

- function getCurrentPost(){
  //- path          strip URL  strip metadata path  
  //- ['index']           yes                   no
  //- [...,'index']       yes                  yes
  //- [...,'foo']          no                   no
  - var urlPath = current.path
  - if (urlPath[urlPath.length-1] == 'index') {
    - urlPath = urlPath.slice(0,-1) }
  - var metaDataPath = (current.path.length === 1) ? current.path : urlPath
  - var post = getPost(metaDataPath)
  - post.path = urlPath
  - return post }

- function slug(path) {return path[path.length-1] || '' }

- function slugToTitle(slug) { // helper for title()
  - return slug.replace(/-/g,' ').replace(/([^\W_]+[^\s-]*) */g,function(w){
    - return w.charAt(0).toUpperCase() + w.substr(1)
  - })}

- function title(post) { // find a title for {path}
  - return post.title || slugToTitle(slug(post.path)) }

- function active(path) { // is {path} an ancestor of {currentPost().path}?
  - var currentPath = getCurrentPost().path
  - if (path.length === 0) return currentPath.length === 0;
  - return path.length <= currentPath.length && href(currentPath.slice(0, path.length)) == href(path) }

- function excerpt(path) {
  - var depth = current.path.length
  - var pathToRoot = Array(depth).join("../");
  - var content = partial(pathToRoot + path.join('/')) || ""
  - if(content.indexOf("<!-- more -->") == -1) return content
  - else return content.split("<!-- more -->")[0] }

- function summary(post) { return post.summary || excerpt(post.path)}

- var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
- function format_date(d){
  - var D = new Date(d)
  - return months[D.getMonth()]+' '+D.getDate()+', '+D.getFullYear() }

- function isSection(post) { 
  - return post.path.length === 1 && post.path[0] !== 'index'  }

- function sectionHasFile(section, file) { 
  - return section && section._contents && (section._contents.indexOf(file) !== -1) }

- function metadataEditURL(path) {
  - return editBaseURL + path.slice(0,-1).concat('_data.json').join('/') }

mixin link(post)
  a(href=href(post.path) title=title(post) class="post-link"+(active(post.path)?" active":""))
    if block
      block
    else
      = title(post)

mixin editLink(path)
  - var sourcePath, fileExists
  - var section = subtree(path.slice(0,-1))
  - if (sectionHasFile(section, slug(path)+'.html')) {
    - sourcePath = path
    - fileExists = true
  - } else if (sectionHasFile(section[slug(path)], 'index.html')) {
    - sourcePath = path.concat('index')
    - fileExists = true
  - } else {
    - sourcePath = path
    - fileExists = false
  - }
  - var url = editBaseURL + sourcePath.join('/') + '.md'
  a(href=url).plain
    if fileExists
      span.icon-quill
    else
      | + 

mixin metadataEditLink(path)
  a(href=metadataEditURL(path)).plain: span.icon-price-tag


mixin dateLabel(date)
  if date
    div.date(data-raw=date)= format_date(date)
    | 

mixin postCard(post)
  .card
    h2: mixin link(post)
    mixin dateLabel(post.date)
    div.excerpt!= summary(post)

mixin nav(path)
  each post in childrenOf(path)
    mixin link(post)

mixin printVal(val)
  pre= JSON.stringify(val, null, 2)
